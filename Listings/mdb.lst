


ARM Macro Assembler    Page 1 


    1 00000000         ; mdb.s
    2 00000000         ; Runs on TM4C1294
    3 00000000         ; Modulo de funciones del protocolo MDB
    4 00000000         ; usando funciones del modulo de UARTInts.s
    5 00000000         ; David Pinzon & Alberto Lopez
    6 00000000         ; May 27, 2017
    7 00000000         
    8 00000000         ;functions from UARTInts.s
    9 00000000                 IMPORT           UART_Init
   10 00000000                 IMPORT           UART_InChar
   11 00000000                 IMPORT           UART_OutChar
   12 00000000                 IMPORT           UART0_Handler
   13 00000000                 IMPORT           UART_OutString
   14 00000000                 IMPORT           UART_InUDec
   15 00000000                 IMPORT           UART_OutUDec
   16 00000000                 IMPORT           UART_InUHex
   17 00000000                 IMPORT           UART_OutUHex
   18 00000000                 IMPORT           UART_InString
   19 00000000                 IMPORT           UART_HighStickParity
   20 00000000                 IMPORT           UART_LowStickParity
   21 00000000         
   22 00000000         ;functions from GPTimer.s
   23 00000000                 IMPORT           Timer_ResponseTime
   24 00000000                 IMPORT           Timer_ResponseTime_stop
   25 00000000                 IMPORT           Timer_BreakTime
   26 00000000                 IMPORT           Timer_SetupTime
   27 00000000                 IMPORT           Timer_PollingTime
   28 00000000                 IMPORT           Timer_NoResponseTime
   29 00000000                 IMPORT           Timer_NoResponseTime_stop
   30 00000000         
   31 00000000                 AREA             DATA, ALIGN=2
   32 00000000 00000024 
                       CMDLEN  EQU              36          ; max size of comma
                                                            nd
   33 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 Command SPACE            (CMDLEN)
   34 00000024 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 DataIn  SPACE            (CMDLEN)
   35 00000048                 EXPORT           Command



ARM Macro Assembler    Page 2 


   36 00000048                 EXPORT           DataIn
   37 00000048         ;functions to export
   38 00000048                 EXPORT           MDB_SendAddress
   39 00000048                 EXPORT           MDB_SendCommand
   40 00000048                 EXPORT           MDB_SendACK
   41 00000048                 EXPORT           MDB_SendRET
   42 00000048                 EXPORT           MDB_SendNAK
   43 00000048                 EXPORT           MDB_GetAnswer
   44 00000048                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   45 00000000                 THUMB
   46 00000000         
   47 00000000         ;-----------MDB_SendAddress-----------
   48 00000000         ; Envia la direccion de un periferico
   49 00000000         ; activa High Stick Parity bit to send adress
   50 00000000         ; activa Low Stick parity after send
   51 00000000         ; Input : R0 8-bit address
   52 00000000         ; Output: none
   53 00000000         MDB_SendAddress
   54 00000000 B503            PUSH             {R0, R1, LR} ; save current val
                                                            ue of R0, R1 and LR
                                                            
   55 00000002 F7FF FFFE       BL               UART_HighStickParity ; set high
                                                             stick parity
   56 00000006 F7FF FFFE       BL               UART_OutChar ; note: modifies R
                                                            0 and R1
   57 0000000A F7FF FFFE       BL               UART_LowStickParity ; set to lo
                                                            w stick parity
   58 0000000E BD03            POP              {R0, R1, PC} ; restore previous
                                                             value of R0 into R
                                                            0, R1 into R1, and 
                                                            LR into PC (return)
                                                            
   59 00000010         
   60 00000010         ;-----------MDB_SendCommand-----------
   61 00000010         ; Envia comando/datos a un periferico
   62 00000010         ; Input : R0 address (for chkSum), R1 pointer to command
                       s, R2 number of command/data bytes to be send
   63 00000010         ; Output: none
   64 00000010         ; Modifies: none, all used Register are pushed and poped
                       
   65 00000010         MDB_SendCommand
   66 00000010 B53F            PUSH             {R0, R1, R2, R3, R4, R5, LR} ; 
                                                            save current value 
                                                            of R0, R1, R2, R3, 
                                                            R4, R5 and LR
   67 00000012 4605            MOV              R5, R0      ; R5 = R0 save init
                                                            ial value of ChkSum
                                                            
   68 00000014 460C            MOV              R4, R1      ; R4 = R1 (save the
                                                             command pointer)
   69 00000016 4613            MOV              R3, R2      ; R3 = R2 (save num
                                                            ber of command/data
                                                             bytes)
   70 00000018 F04F 0200       MOV              R2, #0      ; initialize counte
                                                            r, contador de dato
                                                            s enviados
   71 0000001C         outCommandLoop
   72 0000001C 429A            CMP              R2, R3      ; is counter = numb



ARM Macro Assembler    Page 3 


                                                            er of commands to s
                                                            end ?
   73 0000001E D008            BEQ              outCommandDone ; if so, its don
                                                            e, skip to 'outComm
                                                            andDone'
   74 00000020 6820            LDR              R0, [R4]    ; R0 = [R4] carga e
                                                            l byte a ser enviad
                                                            o
   75 00000022 4405            ADD              R5, R5, R0  ; actualiza chksum 
                                                            byte
   76 00000024 F7FF FFFE       BL               UART_OutChar ; envia el byte en
                                                             R0, note: modifies
                                                             R0 and R1
   77 00000028 F104 0401       ADD              R4, R4, #1  ; R4 = R4 + 1 incre
                                                            menta el command po
                                                            inter
   78 0000002C F102 0201       ADD              R2, R2, #1  ; R2 = R2 + 1 incre
                                                            menta el contador
   79 00000030 E7F4            B                outCommandLoop
   80 00000032         outCommandDone
   81 00000032 4628            MOV              R0, R5      ; R0 = R5 Copy chks
                                                            um to R0
   82 00000034 F7FF FFFE       BL               UART_OutChar ; send chksum byte
                                                            
   83 00000038         ; restore previous value of R0 into R0, R1 into R1, R2 i
                       nto R2
   84 00000038 BD3F            POP              {R0, R1, R2, R3, R4, R5, PC} ; 
                                                            R3 into R3, R4 into
                                                             R4, R5, into R5 an
                                                            d LR into PC (retur
                                                            n)
   85 0000003A         
   86 0000003A         
   87 0000003A         ;-----------MDB_SendACK-----------
   88 0000003A         ; Envia el ACK byte
   89 0000003A         ; Input : none
   90 0000003A         ; Output: none
   91 0000003A         ; Modifies: none, all used Register are pushed and poped
                       
   92 0000003A         MDB_SendACK
   93 0000003A B503            PUSH             {R0, R1, LR}
   94 0000003C F04F 0000       MOV              R0, #0      ; R0 = 0x00H (ACK)
   95 00000040 F7FF FFFE       BL               UART_OutChar ; envia ACK, note:
                                                             modifies R0 and R1
                                                            
   96 00000044 BD03            POP              {R0, R1, PC}
   97 00000046         
   98 00000046         ;-----------MDB_SendRET-----------
   99 00000046         ; Envia el RET byte
  100 00000046         ; Input : none
  101 00000046         ; Output: none
  102 00000046         ; Modifies: none, all used Register are pushed and poped
                       
  103 00000046         MDB_SendRET
  104 00000046 B503            PUSH             {R0, R1, LR}
  105 00000048 F04F 00AA       MOV              R0, #170    ; R0 = 0xAAH (RET)
  106 0000004C F7FF FFFE       BL               UART_OutChar ; envia RET, note:
                                                             modifies R0 and R1
                                                            



ARM Macro Assembler    Page 4 


  107 00000050 BD03            POP              {R0, R1, PC}
  108 00000052         
  109 00000052         ;-----------MDB_SendNAK-----------
  110 00000052         ; Envia el NAK byte
  111 00000052         ; Input : none
  112 00000052         ; Output: none
  113 00000052         ; Modifies: none, all used Register are pushed and poped
                       
  114 00000052         MDB_SendNAK
  115 00000052 B503            PUSH             {R0, R1, LR}
  116 00000054 F04F 00FF       MOV              R0, #255    ; R0 = 0xFFH (NAK)
  117 00000058 F7FF FFFE       BL               UART_OutChar ; envia NAK, note:
                                                             modifies R0 and R1
                                                            
  118 0000005C BD03            POP              {R0, R1, PC}
  119 0000005E         
  120 0000005E         ;-----------MDB_GetAnswer-----------
  121 0000005E         ; Recibe datos/respuesta del periferico
  122 0000005E         ; se debe tener activado LOW Stick Parity, o se cicla la
                        funcion
  123 0000005E         ; Input : R0 pointer to DataIn buffer
  124 0000005E         ; Output: R0 number of data bytes getted, included chk(i
                       f apply), 0 if chksum failed
  125 0000005E         ; Modifies: R0, all used Register are pushed and poped
  126 0000005E         ; DataIn buffer upgraded.
  127 0000005E         MDB_GetAnswer
  128 0000005E B53E            PUSH             {R1, R2, R3, R4, R5, LR} ; save
                                                             current value of R
                                                            0, R1, R2, R3, R4, 
                                                            R5 and LR
  129 00000060 4603            MOV              R3, R0      ; R3 = R0 (save the
                                                             DataIn pointer buf
                                                            fer) 
  130 00000062 F04F 0200       MOV              R2, #0      ; initialize counte
                                                            r, contador de dato
                                                            s recibidos
  131 00000066 F04F 0400       MOV              R4, #0      ; initialize chksum
                                                            
  132 0000006A F04F 0500       MOV              R5, #0      ; personal flag for
                                                             Stick Parity Inter
                                                            rup
  133 0000006E         getAnswerLoop                        ; stay in loop util
                                                             interruption by st
                                                            ick parity detected
                                                             
  134 0000006E F7FF FFFE       BL               UART_InChar ; get byte from UAR
                                                            T
  135 00000072 7018            STRB             R0, [R3]    ; [R3] = R0 (store 
                                                            8 least significant
                                                             bits of R0 into lo
                                                            cation pointed to b
                                                            y R4)
  136 00000074 F103 0301       ADD              R3, R3, #1  ; R4 = R4 + 1 (buff
                                                            erPt = bufferPt + 1
                                                            )
  137 00000078 2D01            CMP              R5, #1      ; R5 = 1 ? (R5 modi
                                                            fied by Stick Parit
                                                            y Interrupt Handler
                                                            )



ARM Macro Assembler    Page 5 


  138 0000007A D001            BEQ              getAnswerEnd ; if so, answer of
                                                             peripheral MDB is 
                                                            finished
  139 0000007C 4404            ADD              R4, R4, R0  ; actualize chksum 
                                                            
  140 0000007E E7F6            B                getAnswerLoop ; unconditional b
                                                            ranch to 'inDataLoo
                                                            p'
  141 00000080         getAnswerEnd
  142 00000080 4601            MOV              R1, R0      ; R1 = R0 (chk byte
                                                            )
  143 00000082 4610            MOV              R0, R2      ; R0 = R2 number of
                                                             bytes received
  144 00000084 2801            CMP              R0, #1      ; R0 = 1 ? (if no n
                                                            eeded check sum)
  145 00000086 D002            BEQ              getAnswerDone ; if so, answer d
                                                            one
  146 00000088 428C            CMP              R4, R1      ; R4 = R0 (chksum =
                                                             chk)?
  147 0000008A BF18 2000       MOVNE            R0, #0      ; R0 = 0 (chksum fa
                                                            iled)
  148 0000008E         getAnswerDone
  149 0000008E         ; restore previous value of R0 into R0, R1 into R1, R2 i
                       nto R2
  150 0000008E BD3E            POP              {R1, R2, R3, R4, R5, PC} ; R3 i
                                                            nto R3, R4 into R4,
                                                             R5, into R5 and LR
                                                             into PC (return)
  151 00000090         
  152 00000090                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  153 00000090                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\mdb.d -o.\objects\mdb.o -IC:\Users\mode_\Documents\Fm
at\MicroControladores\KeilProjects\Cash_flow\RTE\_Target_1 -IC:\Keil_v5\ARM\PAC
K\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -IC:\Keil_v5\ARM\CMSIS\Include --p
redefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 522" --predefine="
TM4C1294NCPDT SETA 1" --list=.\listings\mdb.lst mdb.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Command 00000000

Symbol: Command
   Definitions
      At line 33 in file mdb.s
   Uses
      At line 35 in file mdb.s
Comment: Command used once
DATA 00000000

Symbol: DATA
   Definitions
      At line 31 in file mdb.s
   Uses
      None
Comment: DATA unused
DataIn 00000024

Symbol: DataIn
   Definitions
      At line 34 in file mdb.s
   Uses
      At line 36 in file mdb.s
Comment: DataIn used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 44 in file mdb.s
   Uses
      None
Comment: .text unused
MDB_GetAnswer 0000005E

Symbol: MDB_GetAnswer
   Definitions
      At line 127 in file mdb.s
   Uses
      At line 43 in file mdb.s
Comment: MDB_GetAnswer used once
MDB_SendACK 0000003A

Symbol: MDB_SendACK
   Definitions
      At line 92 in file mdb.s
   Uses
      At line 40 in file mdb.s
Comment: MDB_SendACK used once
MDB_SendAddress 00000000

Symbol: MDB_SendAddress
   Definitions
      At line 53 in file mdb.s
   Uses
      At line 38 in file mdb.s
Comment: MDB_SendAddress used once
MDB_SendCommand 00000010

Symbol: MDB_SendCommand
   Definitions
      At line 65 in file mdb.s
   Uses
      At line 39 in file mdb.s
Comment: MDB_SendCommand used once
MDB_SendNAK 00000052

Symbol: MDB_SendNAK
   Definitions
      At line 114 in file mdb.s
   Uses
      At line 42 in file mdb.s
Comment: MDB_SendNAK used once
MDB_SendRET 00000046

Symbol: MDB_SendRET
   Definitions
      At line 103 in file mdb.s
   Uses
      At line 41 in file mdb.s
Comment: MDB_SendRET used once
getAnswerDone 0000008E

Symbol: getAnswerDone



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 148 in file mdb.s
   Uses
      At line 145 in file mdb.s
Comment: getAnswerDone used once
getAnswerEnd 00000080

Symbol: getAnswerEnd
   Definitions
      At line 141 in file mdb.s
   Uses
      At line 138 in file mdb.s
Comment: getAnswerEnd used once
getAnswerLoop 0000006E

Symbol: getAnswerLoop
   Definitions
      At line 133 in file mdb.s
   Uses
      At line 140 in file mdb.s
Comment: getAnswerLoop used once
outCommandDone 00000032

Symbol: outCommandDone
   Definitions
      At line 80 in file mdb.s
   Uses
      At line 73 in file mdb.s
Comment: outCommandDone used once
outCommandLoop 0000001C

Symbol: outCommandLoop
   Definitions
      At line 71 in file mdb.s
   Uses
      At line 79 in file mdb.s
Comment: outCommandLoop used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

CMDLEN 00000024

Symbol: CMDLEN
   Definitions
      At line 32 in file mdb.s
   Uses
      At line 33 in file mdb.s
      At line 34 in file mdb.s

1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Timer_BreakTime 00000000

Symbol: Timer_BreakTime
   Definitions
      At line 25 in file mdb.s
   Uses
      None
Comment: Timer_BreakTime unused
Timer_NoResponseTime 00000000

Symbol: Timer_NoResponseTime
   Definitions
      At line 28 in file mdb.s
   Uses
      None
Comment: Timer_NoResponseTime unused
Timer_NoResponseTime_stop 00000000

Symbol: Timer_NoResponseTime_stop
   Definitions
      At line 29 in file mdb.s
   Uses
      None
Comment: Timer_NoResponseTime_stop unused
Timer_PollingTime 00000000

Symbol: Timer_PollingTime
   Definitions
      At line 27 in file mdb.s
   Uses
      None
Comment: Timer_PollingTime unused
Timer_ResponseTime 00000000

Symbol: Timer_ResponseTime
   Definitions
      At line 23 in file mdb.s
   Uses
      None
Comment: Timer_ResponseTime unused
Timer_ResponseTime_stop 00000000

Symbol: Timer_ResponseTime_stop
   Definitions
      At line 24 in file mdb.s
   Uses
      None
Comment: Timer_ResponseTime_stop unused
Timer_SetupTime 00000000

Symbol: Timer_SetupTime
   Definitions
      At line 26 in file mdb.s
   Uses
      None
Comment: Timer_SetupTime unused
UART0_Handler 00000000

Symbol: UART0_Handler



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 12 in file mdb.s
   Uses
      None
Comment: UART0_Handler unused
UART_HighStickParity 00000000

Symbol: UART_HighStickParity
   Definitions
      At line 19 in file mdb.s
   Uses
      At line 55 in file mdb.s
Comment: UART_HighStickParity used once
UART_InChar 00000000

Symbol: UART_InChar
   Definitions
      At line 10 in file mdb.s
   Uses
      At line 134 in file mdb.s
Comment: UART_InChar used once
UART_InString 00000000

Symbol: UART_InString
   Definitions
      At line 18 in file mdb.s
   Uses
      None
Comment: UART_InString unused
UART_InUDec 00000000

Symbol: UART_InUDec
   Definitions
      At line 14 in file mdb.s
   Uses
      None
Comment: UART_InUDec unused
UART_InUHex 00000000

Symbol: UART_InUHex
   Definitions
      At line 16 in file mdb.s
   Uses
      None
Comment: UART_InUHex unused
UART_Init 00000000

Symbol: UART_Init
   Definitions
      At line 9 in file mdb.s
   Uses
      None
Comment: UART_Init unused
UART_LowStickParity 00000000

Symbol: UART_LowStickParity
   Definitions
      At line 20 in file mdb.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 57 in file mdb.s
Comment: UART_LowStickParity used once
UART_OutChar 00000000

Symbol: UART_OutChar
   Definitions
      At line 11 in file mdb.s
   Uses
      At line 56 in file mdb.s
      At line 76 in file mdb.s
      At line 82 in file mdb.s
      At line 95 in file mdb.s
      At line 106 in file mdb.s
      At line 117 in file mdb.s

UART_OutString 00000000

Symbol: UART_OutString
   Definitions
      At line 13 in file mdb.s
   Uses
      None
Comment: UART_OutString unused
UART_OutUDec 00000000

Symbol: UART_OutUDec
   Definitions
      At line 15 in file mdb.s
   Uses
      None
Comment: UART_OutUDec unused
UART_OutUHex 00000000

Symbol: UART_OutUHex
   Definitions
      At line 17 in file mdb.s
   Uses
      None
Comment: UART_OutUHex unused
19 symbols
369 symbols in table
