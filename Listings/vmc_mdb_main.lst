


ARM Macro Assembler    Page 1 


    1 00000000         ; UARTIntsTestMain.s
    2 00000000         ; Runs on TM4C1294
    3 00000000         ; Tests the UART0 to implement bidirectional data transf
                       er to and from a
    4 00000000         ; computer running HyperTerminal.  This time, interrupts
                        and FIFOs
    5 00000000         ; are used.
    6 00000000         ; This file is named "UARTInts" because it is the UART w
                       ith interrupts.
    7 00000000         ; Daniel Valvano
    8 00000000         ; May 29, 2014
    9 00000000         
   10 00000000         ;  This example accompanies the book
   11 00000000         ;  "Embedded Systems: Real Time Interfacing to Arm Corte
                       x M Microcontrollers",
   12 00000000         ;  ISBN: 978-1463590154, Jonathan Valvano, copyright (c)
                        2014
   13 00000000         ;  Program 5.11 Section 5.6, Program 3.10
   14 00000000         ;
   15 00000000         ;Copyright 2014 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   16 00000000         ;   You may use, edit, run or distribute this file
   17 00000000         ;   as long as the above copyright notice remains
   18 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   19 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   20 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   21 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   22 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   23 00000000         ;For more information about my classes, my research, and
                        my books, see
   24 00000000         ;http://users.ece.utexas.edu/~valvano/
   25 00000000         
   26 00000000         ; U0Rx (VCP receive) connected to PA0
   27 00000000         ; U0Tx (VCP transmit) connected to PA1
   28 00000000         ; Note: Connected LaunchPad JP4 and JP5 inserted paralle
                       l with long side of board.
   29 00000000         
   30 00000000         ; standard ASCII symbols
   31 00000000 0000000D 
                       CR      EQU              0x0D
   32 00000000 0000000A 
                       LF      EQU              0x0A
   33 00000000 00000008 
                       BS      EQU              0x08
   34 00000000 0000001B 
                       ESC     EQU              0x1B
   35 00000000 00000020 
                       SPA     EQU              0x20
   36 00000000 0000007F 
                       DEL     EQU              0x7F
   37 00000000         
   38 00000000         ; functions in PLL.s
   39 00000000                 IMPORT           PLL_Init
   40 00000000         
   41 00000000         ; functions UART2.s



ARM Macro Assembler    Page 2 


   42 00000000                 IMPORT           UART_Init
   43 00000000                 IMPORT           UART_InChar
   44 00000000                 IMPORT           UART_OutChar
   45 00000000                 IMPORT           UART_OutString
   46 00000000                 IMPORT           UART_InUDec
   47 00000000                 IMPORT           UART_OutUDec
   48 00000000                 IMPORT           UART_InUHex
   49 00000000                 IMPORT           UART_OutUHex
   50 00000000                 IMPORT           UART_InString
   51 00000000         
   52 00000000                 AREA             DATA, ALIGN=2
   53 00000000 00000024 
                       STRLEN  EQU              36          ; string holds 19 n
                                                            on-NULL characters
   54 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       String  SPACE            (STRLEN+1)
   55 00000025 00 00 00 
              00       Number  SPACE            4
   56 00000029                 EXPORT           String      ; global only for o
                                                            bservation using de
                                                            bugger
   57 00000029                 EXPORT           Number      ; global only for o
                                                            bservation using de
                                                            bugger
   58 00000029         
   59 00000029                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   60 00000000                 THUMB
   61 00000000                 EXPORT           Start
   62 00000000         ;constant string values
   63 00000000 49 6E 53 
              74 72 69 
              6E 67 3A 
              20 00    InStrPrompt
                               DCB              "InString: ", 0
   64 0000000B 20 4F 75 
              74 53 74 
              72 69 6E 
              67 3D 00 OutStrPrompt
                               DCB              " OutString=", 0
   65 00000017 49 6E 55 
              44 65 63 
              3A 20 00 InUDecPrompt
                               DCB              "InUDec: ", 0
   66 00000020 20 4F 75 
              74 55 44 
              65 63 3D 
              00       OutUDecPrompt



ARM Macro Assembler    Page 3 


                               DCB              " OutUDec=", 0
   67 0000002A 49 6E 55 
              48 65 78 
              3A 20 00 InUHexPrompt
                               DCB              "InUHex: ", 0
   68 00000033 20 4F 75 
              74 55 48 
              65 78 3D 
              00       OutUHexPrompt
                               DCB              " OutUHex=", 0
   69 0000003D 00 00 00        ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
   70 00000040         
   71 00000040         ;---------------------OutCRLF---------------------
   72 00000040         ; Output a CR,LF to UART to go to a new line
   73 00000040         ; Input: none
   74 00000040         ; Output: none
   75 00000040         OutCRLF
   76 00000040 B500            PUSH             {LR}        ; save current valu
                                                            e of LR
   77 00000042 F04F 000D       MOV              R0, #CR     ; R0 = CR (<carriag
                                                            e return>)
   78 00000046 F7FF FFFE       BL               UART_OutChar ; send <carriage r
                                                            eturn> to the UART
   79 0000004A F04F 000A       MOV              R0, #LF     ; R0 = LF (<line fe
                                                            ed>)
   80 0000004E F7FF FFFE       BL               UART_OutChar ; send <line feed>
                                                             to the UART
   81 00000052 BD00            POP              {PC}        ; restore previous 
                                                            value of LR into PC
                                                             (return)
   82 00000054         
   83 00000054         Start
   84 00000054 F7FF FFFE       BL               PLL_Init    ; set system clock 
                                                            to 120 MHz
   85 00000058 F7FF FFFE       BL               UART_Init   ; initialize UART
   86 0000005C F7FF FFF0       BL               OutCRLF     ; go to a new line
   87 00000060         ; print the uppercase alphabet
   88 00000060 F04F 0441       MOV              R4, #'A'    ; R4 = 'A'
   89 00000064         uppercaseLoop
   90 00000064 4620            MOV              R0, R4      ; R0 = R4
   91 00000066 F7FF FFFE       BL               UART_OutChar ; send the charact
                                                            er (R4) to the UART
                                                            
   92 0000006A F104 0401       ADD              R4, R4, #1  ; R4 = R4 + 1 (go t
                                                            o the next characte
                                                            r in the alphabet)
   93 0000006E 2C5A            CMP              R4, #'Z'    ; is R4 (character)
                                                             <= 'Z'?
   94 00000070 D9F8            BLS              uppercaseLoop ; if so, skip to 
                                                            'uppercaseLoop'
   95 00000072 F7FF FFE5       BL               OutCRLF     ; go to a new line
   96 00000076 F04F 0020       MOV              R0, #' '    ; R0 = ' '
   97 0000007A F7FF FFFE       BL               UART_OutChar ; send the charact
                                                            er (' ') to the UAR
                                                            T
   98 0000007E         ; print the lowercase alphabet
   99 0000007E F04F 0461       MOV              R4, #'a'    ; R4 = 'a'



ARM Macro Assembler    Page 4 


  100 00000082         lowercaseLoop
  101 00000082 4620            MOV              R0, R4      ; R0 = R4
  102 00000084 F7FF FFFE       BL               UART_OutChar ; send the charact
                                                            er (R4) to the UART
                                                            
  103 00000088 F104 0401       ADD              R4, R4, #1  ; R4 = R4 + 1 (go t
                                                            o the next characte
                                                            r in the alphabet)
  104 0000008C 2C7A            CMP              R4, #'z'    ; is R4 (character)
                                                             <= 'z'?
  105 0000008E D9F8            BLS              lowercaseLoop ; if so, skip to 
                                                            'lowercaseLoop'
  106 00000090 F7FF FFD6       BL               OutCRLF     ; go to a new line
  107 00000094 F04F 002D       MOV              R0, #'-'    ; R0 = '-'
  108 00000098 F7FF FFFE       BL               UART_OutChar ; send the charact
                                                            er ('-') to the UAR
                                                            T
  109 0000009C F04F 002D       MOV              R0, #'-'    ; R0 = '-'
  110 000000A0 F7FF FFFE       BL               UART_OutChar ; send the charact
                                                            er ('-') to the UAR
                                                            T
  111 000000A4 F04F 003E       MOV              R0, #'>'    ; R0 = '>'
  112 000000A8 F7FF FFFE       BL               UART_OutChar ; send the charact
                                                            er ('>') to the UAR
                                                            T
  113 000000AC         loop
  114 000000AC         ; echo a string
  115 000000AC 4818            LDR              R0, =InStrPrompt 
                                                            ; R0 = &InStrPrompt
                                                            
  116 000000AE F7FF FFFE       BL               UART_OutString 
                                                            ; print the prompt
  117 000000B2 4818            LDR              R0, =String ; R0 = &String
  118 000000B4 F04F 0124       MOV              R1, #STRLEN ; R1 = STRLEN (R1 =
                                                             number of non-NULL
                                                             characters)
  119 000000B8 F7FF FFFE       BL               UART_InString ; get a string fr
                                                            om the terminal
  120 000000BC 4816            LDR              R0, =OutStrPrompt ; R0 = &OutSt
                                                            rPrompt
  121 000000BE F7FF FFFE       BL               UART_OutString 
                                                            ; print the prompt
  122 000000C2 4814            LDR              R0, =String ; R0 = &String
  123 000000C4 F7FF FFFE       BL               UART_OutString ; print the stri
                                                            ng received from th
                                                            e terminal
  124 000000C8 F7FF FFBA       BL               OutCRLF     ; go to a new line
  125 000000CC         ; echo an unsigned decimal number
  126 000000CC 4813            LDR              R0, =InUDecPrompt ; R0 = &InUDe
                                                            cPrompt
  127 000000CE F7FF FFFE       BL               UART_OutString 
                                                            ; print the prompt
  128 000000D2 F7FF FFFE       BL               UART_InUDec ; get a number from
                                                             the terminal
  129 000000D6 4912            LDR              R1, =Number ; R1 = &Number
  130 000000D8 6008            STR              R0, [R1]    ; [R1] = R0 (save t
                                                            he number)
  131 000000DA 4812            LDR              R0, =OutUDecPrompt ; R0 = &OutU
                                                            DecPrompt



ARM Macro Assembler    Page 5 


  132 000000DC F7FF FFFE       BL               UART_OutString 
                                                            ; print the prompt
  133 000000E0 490F            LDR              R1, =Number ; R1 = &Number
  134 000000E2 6808            LDR              R0, [R1]    ; R0 = [R1] (recall
                                                             the number)
  135 000000E4 F7FF FFFE       BL               UART_OutUDec ; print the number
                                                             received from the 
                                                            terminal
  136 000000E8 F7FF FFAA       BL               OutCRLF     ; go to a new line
  137 000000EC         ; echo an unsigned hexidecimal number
  138 000000EC 480E            LDR              R0, =InUHexPrompt ; R0 = &InUHe
                                                            xPrompt
  139 000000EE F7FF FFFE       BL               UART_OutString 
                                                            ; print the prompt
  140 000000F2 F7FF FFFE       BL               UART_InUHex ; get a number from
                                                             the terminal
  141 000000F6 490A            LDR              R1, =Number ; R1 = &Number
  142 000000F8 6008            STR              R0, [R1]    ; [R1] = R0 (save t
                                                            he number)
  143 000000FA 480C            LDR              R0, =OutUHexPrompt ; R0 = &OutU
                                                            HexPrompt
  144 000000FC F7FF FFFE       BL               UART_OutString 
                                                            ; print the prompt
  145 00000100 4907            LDR              R1, =Number ; R1 = &Number
  146 00000102 6808            LDR              R0, [R1]    ; R0 = [R1] (recall
                                                             the number)
  147 00000104 F7FF FFFE       BL               UART_OutUHex ; print the number
                                                             received from the 
                                                            terminal
  148 00000108 F7FF FF9A       BL               OutCRLF     ; go to a new line
  149 0000010C E7CE            B                loop        ; unconditional bra
                                                            nch to 'loop'
  150 0000010E         
  151 0000010E 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  152 00000110                 END                          ; end of file
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\vmc_mdb_main.d -o.\objects\vmc_mdb_main.o -IC:\Users\
mode_\Documents\Fmat\MicroControladores\KeilProjects\Cash_flow\RTE\_Target_1 -I
C:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -IC:\Keil_v5\ARM
\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 
522" --predefine="TM4C1294NCPDT SETA 1" --list=.\listings\vmc_mdb_main.lst VMC_
MDB_Main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 52 in file VMC_MDB_Main.s
   Uses
      None
Comment: DATA unused
Number 00000025

Symbol: Number
   Definitions
      At line 55 in file VMC_MDB_Main.s
   Uses
      At line 57 in file VMC_MDB_Main.s
      At line 129 in file VMC_MDB_Main.s
      At line 133 in file VMC_MDB_Main.s
      At line 141 in file VMC_MDB_Main.s
      At line 145 in file VMC_MDB_Main.s

String 00000000

Symbol: String
   Definitions
      At line 54 in file VMC_MDB_Main.s
   Uses
      At line 56 in file VMC_MDB_Main.s
      At line 117 in file VMC_MDB_Main.s
      At line 122 in file VMC_MDB_Main.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 59 in file VMC_MDB_Main.s
   Uses
      None
Comment: .text unused
InStrPrompt 00000000

Symbol: InStrPrompt
   Definitions
      At line 63 in file VMC_MDB_Main.s
   Uses
      At line 115 in file VMC_MDB_Main.s
Comment: InStrPrompt used once
InUDecPrompt 00000017

Symbol: InUDecPrompt
   Definitions
      At line 65 in file VMC_MDB_Main.s
   Uses
      At line 126 in file VMC_MDB_Main.s
Comment: InUDecPrompt used once
InUHexPrompt 0000002A

Symbol: InUHexPrompt
   Definitions
      At line 67 in file VMC_MDB_Main.s
   Uses
      At line 138 in file VMC_MDB_Main.s
Comment: InUHexPrompt used once
OutCRLF 00000040

Symbol: OutCRLF
   Definitions
      At line 75 in file VMC_MDB_Main.s
   Uses
      At line 86 in file VMC_MDB_Main.s
      At line 95 in file VMC_MDB_Main.s
      At line 106 in file VMC_MDB_Main.s
      At line 124 in file VMC_MDB_Main.s
      At line 136 in file VMC_MDB_Main.s
      At line 148 in file VMC_MDB_Main.s

OutStrPrompt 0000000B

Symbol: OutStrPrompt
   Definitions
      At line 64 in file VMC_MDB_Main.s
   Uses
      At line 120 in file VMC_MDB_Main.s
Comment: OutStrPrompt used once
OutUDecPrompt 00000020

Symbol: OutUDecPrompt
   Definitions
      At line 66 in file VMC_MDB_Main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 131 in file VMC_MDB_Main.s
Comment: OutUDecPrompt used once
OutUHexPrompt 00000033

Symbol: OutUHexPrompt
   Definitions
      At line 68 in file VMC_MDB_Main.s
   Uses
      At line 143 in file VMC_MDB_Main.s
Comment: OutUHexPrompt used once
Start 00000054

Symbol: Start
   Definitions
      At line 83 in file VMC_MDB_Main.s
   Uses
      At line 61 in file VMC_MDB_Main.s
Comment: Start used once
loop 000000AC

Symbol: loop
   Definitions
      At line 113 in file VMC_MDB_Main.s
   Uses
      At line 149 in file VMC_MDB_Main.s
Comment: loop used once
lowercaseLoop 00000082

Symbol: lowercaseLoop
   Definitions
      At line 100 in file VMC_MDB_Main.s
   Uses
      At line 105 in file VMC_MDB_Main.s
Comment: lowercaseLoop used once
uppercaseLoop 00000064

Symbol: uppercaseLoop
   Definitions
      At line 89 in file VMC_MDB_Main.s
   Uses
      At line 94 in file VMC_MDB_Main.s
Comment: uppercaseLoop used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BS 00000008

Symbol: BS
   Definitions
      At line 33 in file VMC_MDB_Main.s
   Uses
      None
Comment: BS unused
CR 0000000D

Symbol: CR
   Definitions
      At line 31 in file VMC_MDB_Main.s
   Uses
      At line 77 in file VMC_MDB_Main.s
Comment: CR used once
DEL 0000007F

Symbol: DEL
   Definitions
      At line 36 in file VMC_MDB_Main.s
   Uses
      None
Comment: DEL unused
ESC 0000001B

Symbol: ESC
   Definitions
      At line 34 in file VMC_MDB_Main.s
   Uses
      None
Comment: ESC unused
LF 0000000A

Symbol: LF
   Definitions
      At line 32 in file VMC_MDB_Main.s
   Uses
      At line 79 in file VMC_MDB_Main.s
Comment: LF used once
SPA 00000020

Symbol: SPA
   Definitions
      At line 35 in file VMC_MDB_Main.s
   Uses
      None
Comment: SPA unused
STRLEN 00000024

Symbol: STRLEN
   Definitions
      At line 53 in file VMC_MDB_Main.s
   Uses
      At line 54 in file VMC_MDB_Main.s
      At line 118 in file VMC_MDB_Main.s

7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 39 in file VMC_MDB_Main.s
   Uses
      At line 84 in file VMC_MDB_Main.s
Comment: PLL_Init used once
UART_InChar 00000000

Symbol: UART_InChar
   Definitions
      At line 43 in file VMC_MDB_Main.s
   Uses
      None
Comment: UART_InChar unused
UART_InString 00000000

Symbol: UART_InString
   Definitions
      At line 50 in file VMC_MDB_Main.s
   Uses
      At line 119 in file VMC_MDB_Main.s
Comment: UART_InString used once
UART_InUDec 00000000

Symbol: UART_InUDec
   Definitions
      At line 46 in file VMC_MDB_Main.s
   Uses
      At line 128 in file VMC_MDB_Main.s
Comment: UART_InUDec used once
UART_InUHex 00000000

Symbol: UART_InUHex
   Definitions
      At line 48 in file VMC_MDB_Main.s
   Uses
      At line 140 in file VMC_MDB_Main.s
Comment: UART_InUHex used once
UART_Init 00000000

Symbol: UART_Init
   Definitions
      At line 42 in file VMC_MDB_Main.s
   Uses
      At line 85 in file VMC_MDB_Main.s
Comment: UART_Init used once
UART_OutChar 00000000

Symbol: UART_OutChar
   Definitions
      At line 44 in file VMC_MDB_Main.s
   Uses
      At line 78 in file VMC_MDB_Main.s
      At line 80 in file VMC_MDB_Main.s
      At line 91 in file VMC_MDB_Main.s
      At line 97 in file VMC_MDB_Main.s
      At line 102 in file VMC_MDB_Main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 108 in file VMC_MDB_Main.s
      At line 110 in file VMC_MDB_Main.s
      At line 112 in file VMC_MDB_Main.s

UART_OutString 00000000

Symbol: UART_OutString
   Definitions
      At line 45 in file VMC_MDB_Main.s
   Uses
      At line 116 in file VMC_MDB_Main.s
      At line 121 in file VMC_MDB_Main.s
      At line 123 in file VMC_MDB_Main.s
      At line 127 in file VMC_MDB_Main.s
      At line 132 in file VMC_MDB_Main.s
      At line 139 in file VMC_MDB_Main.s
      At line 144 in file VMC_MDB_Main.s

UART_OutUDec 00000000

Symbol: UART_OutUDec
   Definitions
      At line 47 in file VMC_MDB_Main.s
   Uses
      At line 135 in file VMC_MDB_Main.s
Comment: UART_OutUDec used once
UART_OutUHex 00000000

Symbol: UART_OutUHex
   Definitions
      At line 49 in file VMC_MDB_Main.s
   Uses
      At line 147 in file VMC_MDB_Main.s
Comment: UART_OutUHex used once
10 symbols
368 symbols in table
