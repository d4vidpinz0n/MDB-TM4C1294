


ARM Macro Assembler    Page 1 


    1 00000000         ; FIFO.s
    2 00000000         ; Runs on any computer
    3 00000000         ; Provide functions that initialize a FIFO, put data in,
                        get data out,
    4 00000000         ; and return the current size.  The file includes a tran
                       smit FIFO
    5 00000000         ; using index implementation and a receive FIFO using po
                       inter
    6 00000000         ; implementation.
    7 00000000         ; Jonathan Valvano
    8 00000000         ; May 29, 2014
    9 00000000         
   10 00000000         ;  This example accompanies the book
   11 00000000         ;  "Embedded Systems: Introduction to ARM Cortex M Micro
                       controllers"
   12 00000000         ;  ISBN: 978-1469998749, Jonathan Valvano, copyright (c)
                        2014
   13 00000000         ;
   14 00000000         ;Copyright 2014 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   15 00000000         ;   You may use, edit, run or distribute this file
   16 00000000         ;   as long as the above copyright notice remains
   17 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   18 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   19 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   20 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   21 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   22 00000000         ;For more information about my classes, my research, and
                        my books, see
   23 00000000         ;http://users.ece.utexas.edu/~valvano/
   24 00000000         
   25 00000000                 EXPORT           TxFifo_Init
   26 00000000                 EXPORT           TxFifo_Put
   27 00000000                 EXPORT           TxFifo_Get
   28 00000000                 EXPORT           TxFifo_Size
   29 00000000                 EXPORT           RxFifo_Init
   30 00000000                 EXPORT           RxFifo_Put
   31 00000000                 EXPORT           RxFifo_Get
   32 00000000                 EXPORT           RxFifo_Size
   33 00000000         
   34 00000000                 AREA             DATA, ALIGN=2
   35 00000000 00000010 
                       SIZE    EQU              16
   36 00000000 00 00 00 
              00       RxPutPt SPACE            4
   37 00000004 00 00 00 
              00       RxGetPt SPACE            4
   38 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       RxFifo  SPACE            SIZE        ; space for SIZE by
                                                            tes
   39 00000018 00 00 00 



ARM Macro Assembler    Page 2 


              00       TxPutPt SPACE            4
   40 0000001C 00 00 00 
              00       TxGetPt SPACE            4
   41 00000020 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       TxFifo  SPACE            SIZE        ; space for SIZE by
                                                            tes
   42 00000030         
   43 00000030                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   44 00000000                 THUMB
   45 00000000         ;Initialize RxFifo
   46 00000000         RxFifo_Init
   47 00000000 483A            LDR              R0,=RxFifo  ;pointer to beginni
                                                            ng
   48 00000002 493B            LDR              R1,=RxPutPt
   49 00000004 6008            STR              R0,[R1]
   50 00000006 493B            LDR              R1,=RxGetPt
   51 00000008 6008            STR              R0,[R1]
   52 0000000A 4770            BX               LR
   53 0000000C         
   54 0000000C         ;Put data into RxFifo
   55 0000000C         ; Input R0 8-bit data
   56 0000000C         ; Output: R0 1 if successful
   57 0000000C         ;            0 if unsuccessful, because it was ful
   58 0000000C 4938    RxFifo_Put
                               LDR              R1,=RxPutPt
   59 0000000E 680A            LDR              R2,[R1]     ;RxPutPt
   60 00000010 F102 0301       ADD              R3,R2,#1
   61 00000014 F8DF C0E0       LDR              R12,=RxFifo+SIZE
   62 00000018 4563            CMP              R3,R12      ;check if should wr
                                                            ap
   63 0000001A D100            BNE              NoWrap
   64 0000001C 4B33            LDR              R3,=RxFifo  ;wrap
   65 0000001E F8DF C0D4 
                       NoWrap  LDR              R12,=RxGetPt
   66 00000022 F8DC C000       LDR              R12,[R12]   ;RxGetPt
   67 00000026 4563            CMP              R3,R12      ;full when holding 
                                                            SIZE-1
   68 00000028 D102            BNE              NotFull
   69 0000002A F04F 0000       MOV              R0,#0       ;full
   70 0000002E 4770            BX               LR
   71 00000030 7010    NotFull STRB             R0,[R2]     ;save
   72 00000032 600B            STR              R3,[R1]     ;update RxPutPt
   73 00000034 F04F 0001       MOV              R0,#1       ;success
   74 00000038 4770            BX               LR
   75 0000003A         
   76 0000003A         ;remove one element from RxFifo
   77 0000003A         ;Input: call by reference to a place to store removed da
                       ta
   78 0000003A         ; Output: R0 1 if successful
   79 0000003A         ;            0 if unsuccessful, because it was empty
   80 0000003A B530    RxFifo_Get
                               PUSH             {R4,R5,LR}
   81 0000003C 492C            LDR              R1,=RxPutPt
   82 0000003E 6809            LDR              R1,[R1]     ;RxPutPt



ARM Macro Assembler    Page 3 


   83 00000040 4A2C            LDR              R2,=RxGetPt
   84 00000042 6813            LDR              R3,[R2]     ;RxGetPt
   85 00000044 4299            CMP              R1,R3       ;empty if RxPutPt e
                                                            quals RxGetPt
   86 00000046 D102            BNE              NotEmpty
   87 00000048 F04F 0000       MOV              R0,#0       ;fail, empty
   88 0000004C E009            B                done
   89 0000004E F993 4000 
                       NotEmpty
                               LDRSB            R4,[R3]     ;read from RxFifo
   90 00000052 7004            STRB             R4,[R0]     ;return by referenc
                                                            e
   91 00000054 F103 0301       ADD              R3,R3,#1    ;next place to Get
   92 00000058 4D27            LDR              R5,=RxFifo+SIZE
   93 0000005A 42AB            CMP              R3,R5       ;check if need to w
                                                            rap
   94 0000005C D100            BNE              NoWrap2
   95 0000005E 4B23            LDR              R3,=RxFifo  ;wrap
   96 00000060 6013    NoWrap2 STR              R3,[R2]     ;update RxGetPt
   97 00000062 BD30    done    POP              {R4,R5,PC}
   98 00000064         
   99 00000064         ;Returns the number of elements in the RxFifo
  100 00000064         ; Input:  none
  101 00000064         ; Output: R0 0 to SIZE-1
  102 00000064         RxFifo_Size
  103 00000064 4922            LDR              R1,=RxPutPt
  104 00000066 6809            LDR              R1,[R1]     ;RxPutPt
  105 00000068 4A22            LDR              R2,=RxGetPt
  106 0000006A 6813            LDR              R3,[R2]     ;RxGetPt
  107 0000006C EBA1 0003       SUB              R0,R1,R3    ;RxPutPt-RxGetPt
  108 00000070 F000 000F       AND              R0,#(SIZE-1) ; SIZE must be a p
                                                            ower of two
  109 00000074 4770            BX               LR
  110 00000076         
  111 00000076         ;Initialize TxFifo
  112 00000076         TxFifo_Init
  113 00000076 4821            LDR              R0,=TxFifo  ;pointer to beginni
                                                            ng
  114 00000078 4921            LDR              R1,=TxPutPt
  115 0000007A 6008            STR              R0,[R1]
  116 0000007C 4921            LDR              R1,=TxGetPt
  117 0000007E 6008            STR              R0,[R1]
  118 00000080 4770            BX               LR
  119 00000082         
  120 00000082         ;Put data into TxFifo
  121 00000082         ; Input R0 8-bit data
  122 00000082         ; Output: R0 1 if successful
  123 00000082         ;            0 if unsuccessful, because it was ful
  124 00000082 491F    TxFifo_Put
                               LDR              R1,=TxPutPt
  125 00000084 680A            LDR              R2,[R1]     ;TxPutPt
  126 00000086 F102 0301       ADD              R3,R2,#1
  127 0000008A F8DF C07C       LDR              R12,=TxFifo+SIZE
  128 0000008E 4563            CMP              R3,R12      ;check if should wr
                                                            ap
  129 00000090 D100            BNE              TxNoWrap
  130 00000092 4B1A            LDR              R3,=TxFifo  ;wrap
  131 00000094 F8DF C06C 
                       TxNoWrap



ARM Macro Assembler    Page 4 


                               LDR              R12,=TxGetPt
  132 00000098 F8DC C000       LDR              R12,[R12]   ;TxGetPt
  133 0000009C 4563            CMP              R3,R12      ;full when holding 
                                                            SIZE-1
  134 0000009E D102            BNE              TxNotFull
  135 000000A0 F04F 0000       MOV              R0,#0       ;full
  136 000000A4 4770            BX               LR
  137 000000A6 7010    TxNotFull
                               STRB             R0,[R2]     ;save
  138 000000A8 600B            STR              R3,[R1]     ;update TxPutPt
  139 000000AA F04F 0001       MOV              R0,#1       ;success
  140 000000AE 4770            BX               LR
  141 000000B0         
  142 000000B0         ;remove one element from TxFifo
  143 000000B0         ;Input: call by reference to a place to store removed da
                       ta
  144 000000B0         ; Output: R0 1 if successful
  145 000000B0         ;            0 if unsuccessful, because it was empty
  146 000000B0 B530    TxFifo_Get
                               PUSH             {R4,R5,LR}
  147 000000B2 4913            LDR              R1,=TxPutPt
  148 000000B4 6809            LDR              R1,[R1]     ;TxPutPt
  149 000000B6 4A13            LDR              R2,=TxGetPt
  150 000000B8 6813            LDR              R3,[R2]     ;TxGetPt
  151 000000BA 4299            CMP              R1,R3       ;empty if TxPutPt e
                                                            quals TxGetPt
  152 000000BC D102            BNE              TxNotEmpty
  153 000000BE F04F 0000       MOV              R0,#0       ;fail, empty
  154 000000C2 E009            B                Txdone
  155 000000C4 F993 4000 
                       TxNotEmpty
                               LDRSB            R4,[R3]     ;read from TxFifo
  156 000000C8 7004            STRB             R4,[R0]     ;return by referenc
                                                            e
  157 000000CA F103 0301       ADD              R3,R3,#1    ;next place to Get
  158 000000CE 4D0E            LDR              R5,=TxFifo+SIZE
  159 000000D0 42AB            CMP              R3,R5       ;check if need to w
                                                            rap
  160 000000D2 D100            BNE              TxNoWrap2
  161 000000D4 4B09            LDR              R3,=TxFifo  ;wrap
  162 000000D6 6013    TxNoWrap2
                               STR              R3,[R2]     ;update TxGetPt
  163 000000D8 BD30    Txdone  POP              {R4,R5,PC}
  164 000000DA         
  165 000000DA         ;Returns the number of elements in the TxFifo
  166 000000DA         ; Input:  none
  167 000000DA         ; Output: R0 0 to SIZE-1
  168 000000DA         TxFifo_Size
  169 000000DA 4909            LDR              R1,=TxPutPt
  170 000000DC 6809            LDR              R1,[R1]     ;TxPutPt
  171 000000DE 4A09            LDR              R2,=TxGetPt
  172 000000E0 6813            LDR              R3,[R2]     ;TxGetPt
  173 000000E2 EBA1 0003       SUB              R0,R1,R3    ;TxPutPt-TxGetPt
  174 000000E6 F000 000F       AND              R0,#(SIZE-1) ; SIZE must be a p
                                                            ower of two
  175 000000EA 4770            BX               LR
  176 000000EC         
  177 000000EC                 ALIGN                        ; make sure the end
                                                             of this section is



ARM Macro Assembler    Page 5 


                                                             aligned
  178 000000EC                 END                          ; end of file
              00000000 
              00000000 
              00000000 
              00000010 
              00000000 
              00000000 
              00000000 
              00000010 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\fifo.d -o.\objects\fifo.o -IC:\Users\mode_\Documents\
Fmat\MicroControladores\KeilProjects\Cash_flow\RTE\_Target_1 -IC:\Keil_v5\ARM\P
ACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -IC:\Keil_v5\ARM\CMSIS\Include -
-predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 522" --predefine
="TM4C1294NCPDT SETA 1" --list=.\listings\fifo.lst FIFO.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 34 in file FIFO.s
   Uses
      None
Comment: DATA unused
RxFifo 00000008

Symbol: RxFifo
   Definitions
      At line 38 in file FIFO.s
   Uses
      At line 47 in file FIFO.s
      At line 61 in file FIFO.s
      At line 64 in file FIFO.s
      At line 92 in file FIFO.s
      At line 95 in file FIFO.s

RxGetPt 00000004

Symbol: RxGetPt
   Definitions
      At line 37 in file FIFO.s
   Uses
      At line 50 in file FIFO.s
      At line 65 in file FIFO.s
      At line 83 in file FIFO.s
      At line 105 in file FIFO.s

RxPutPt 00000000

Symbol: RxPutPt
   Definitions
      At line 36 in file FIFO.s
   Uses
      At line 48 in file FIFO.s
      At line 58 in file FIFO.s
      At line 81 in file FIFO.s
      At line 103 in file FIFO.s

TxFifo 00000020

Symbol: TxFifo
   Definitions
      At line 41 in file FIFO.s
   Uses
      At line 113 in file FIFO.s
      At line 127 in file FIFO.s
      At line 130 in file FIFO.s
      At line 158 in file FIFO.s
      At line 161 in file FIFO.s

TxGetPt 0000001C

Symbol: TxGetPt
   Definitions
      At line 40 in file FIFO.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 116 in file FIFO.s
      At line 131 in file FIFO.s
      At line 149 in file FIFO.s
      At line 171 in file FIFO.s

TxPutPt 00000018

Symbol: TxPutPt
   Definitions
      At line 39 in file FIFO.s
   Uses
      At line 114 in file FIFO.s
      At line 124 in file FIFO.s
      At line 147 in file FIFO.s
      At line 169 in file FIFO.s

7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 43 in file FIFO.s
   Uses
      None
Comment: .text unused
NoWrap 0000001E

Symbol: NoWrap
   Definitions
      At line 65 in file FIFO.s
   Uses
      At line 63 in file FIFO.s
Comment: NoWrap used once
NoWrap2 00000060

Symbol: NoWrap2
   Definitions
      At line 96 in file FIFO.s
   Uses
      At line 94 in file FIFO.s
Comment: NoWrap2 used once
NotEmpty 0000004E

Symbol: NotEmpty
   Definitions
      At line 89 in file FIFO.s
   Uses
      At line 86 in file FIFO.s
Comment: NotEmpty used once
NotFull 00000030

Symbol: NotFull
   Definitions
      At line 71 in file FIFO.s
   Uses
      At line 68 in file FIFO.s
Comment: NotFull used once
RxFifo_Get 0000003A

Symbol: RxFifo_Get
   Definitions
      At line 80 in file FIFO.s
   Uses
      At line 31 in file FIFO.s
Comment: RxFifo_Get used once
RxFifo_Init 00000000

Symbol: RxFifo_Init
   Definitions
      At line 46 in file FIFO.s
   Uses
      At line 29 in file FIFO.s
Comment: RxFifo_Init used once
RxFifo_Put 0000000C

Symbol: RxFifo_Put



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 58 in file FIFO.s
   Uses
      At line 30 in file FIFO.s
Comment: RxFifo_Put used once
RxFifo_Size 00000064

Symbol: RxFifo_Size
   Definitions
      At line 102 in file FIFO.s
   Uses
      At line 32 in file FIFO.s
Comment: RxFifo_Size used once
TxFifo_Get 000000B0

Symbol: TxFifo_Get
   Definitions
      At line 146 in file FIFO.s
   Uses
      At line 27 in file FIFO.s
Comment: TxFifo_Get used once
TxFifo_Init 00000076

Symbol: TxFifo_Init
   Definitions
      At line 112 in file FIFO.s
   Uses
      At line 25 in file FIFO.s
Comment: TxFifo_Init used once
TxFifo_Put 00000082

Symbol: TxFifo_Put
   Definitions
      At line 124 in file FIFO.s
   Uses
      At line 26 in file FIFO.s
Comment: TxFifo_Put used once
TxFifo_Size 000000DA

Symbol: TxFifo_Size
   Definitions
      At line 168 in file FIFO.s
   Uses
      At line 28 in file FIFO.s
Comment: TxFifo_Size used once
TxNoWrap 00000094

Symbol: TxNoWrap
   Definitions
      At line 131 in file FIFO.s
   Uses
      At line 129 in file FIFO.s
Comment: TxNoWrap used once
TxNoWrap2 000000D6

Symbol: TxNoWrap2
   Definitions
      At line 162 in file FIFO.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 160 in file FIFO.s
Comment: TxNoWrap2 used once
TxNotEmpty 000000C4

Symbol: TxNotEmpty
   Definitions
      At line 155 in file FIFO.s
   Uses
      At line 152 in file FIFO.s
Comment: TxNotEmpty used once
TxNotFull 000000A6

Symbol: TxNotFull
   Definitions
      At line 137 in file FIFO.s
   Uses
      At line 134 in file FIFO.s
Comment: TxNotFull used once
Txdone 000000D8

Symbol: Txdone
   Definitions
      At line 163 in file FIFO.s
   Uses
      At line 154 in file FIFO.s
Comment: Txdone used once
done 00000062

Symbol: done
   Definitions
      At line 97 in file FIFO.s
   Uses
      At line 88 in file FIFO.s
Comment: done used once
19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

SIZE 00000010

Symbol: SIZE
   Definitions
      At line 35 in file FIFO.s
   Uses
      At line 38 in file FIFO.s
      At line 41 in file FIFO.s
      At line 61 in file FIFO.s
      At line 92 in file FIFO.s
      At line 108 in file FIFO.s
      At line 127 in file FIFO.s
      At line 158 in file FIFO.s
      At line 174 in file FIFO.s

1 symbol
363 symbols in table
